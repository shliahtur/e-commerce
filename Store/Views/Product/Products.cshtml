@model Store.Models.StoreViewModel
@using PagedList.Mvc;
@using Store.Controllers
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/PagedList.css" rel="stylesheet" />


@{
    ProductController productCtrl = new ProductController();

    int postnum = 0;
}

<div style="overflow:hidden;width:100%;">
    <table style="float:right;">
        <tr>
            <th>Сортировать по:</th>
            <th>
                @using (Ajax.BeginForm("Products", "Product", new AjaxOptions
                {
                    HttpMethod = "Get",
                    UpdateTargetId = "mainblogview"
                }))
                {
                    if (ViewBag.CurrentSearchCategory != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchCategory)
                        {
                            <input type="hidden" name="searchCategory" value="@item" />
                        }
                    }

                    <input type="hidden" name="searchString" value="@ViewBag.CurrentSearchString" />
                    <input type="hidden" name="sortOrder" value="@ViewBag.DateSortParm" />
                    <input class="submitBtnLink" type="submit" value="По дате публикации" />
                }
            </th>
            <th class="tableTitle">
                @using (Ajax.BeginForm("Products", "Product", new AjaxOptions
                {
                    HttpMethod = "Get",
                    UpdateTargetId = "mainblogview"
                }))
                {
                    if (ViewBag.CurrentSearchCategory != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchCategory)
                        {
                            <input type="hidden" name="searchCategory" value="@item" />
                        }
                    }

                    <input type="hidden" name="searchString" value="@ViewBag.CurrentSearchString" />
                    <input type="hidden" name="sortOrder" value="@ViewBag.TitleSortParm" />
                    <input class="submitBtnLink" type="submit" value="По сумме" />
                }
            </th>
        </tr>
    </table>
</div>

@foreach (var product in Model.PagedStoreViewModel)
{
    postnum++;
    var total = product.ProductLikes - product.ProductDislikes;
    <div class="postBody">

        <div class="postDescContainer">
            <div class="postPubDate">
                <div>@product.Price грн</div>
                @{
                    int fakeid = Int32.Parse(product.ProductId) + 16946;
                    <div>Код товара: @fakeid</div>
                }


            </div>
            <a href="#">
                <div class="postDescTitle"><h3>@Html.ActionLink(@product.Name, "Product", "Product", new { slug = @product.UrlSlug }, null)</h3></div>
            </a>
            <div class="postDescCategory">
                <label>Категория:&nbsp;</label>
                @{
                    var productCats = productCtrl.GetProductCategories(product.Product);
                    int productcatnum = 0;
                    foreach (var cat in productCats)
                    {
                        productcatnum++;
                        <a href="#">
                            <div class="postDescCatNames">
                                @cat.Name@if (productcatnum < productCats.Count())
                                {
                                    @Html.Raw(",&nbsp;")
                                }
                            </div>
                        </a>
                    }

                }
                <div class="postDescBody">
                    @{
                        var productPictures = productCtrl.GetProductPictures(product.Product);
                        if (productPictures != null)
                        {
                            <div class="postVidCont">
                                @foreach (var picture in productPictures)
                                {
                                    if (productPictures.First() == picture)
                                    {

                                        @Html.Raw("<img style='width:200px; height:200px;' src=\"data:image/jpeg;base64,"
                                                                           + Convert.ToBase64String(picture.Image) + "\" />");
                                    }
                                }
                            </div>
                        }
                    }
                    <h2><a href="@Url.Action("AddToCart","Cart",new {ProductId = @product.ProductId })" title="Name">купить</a> </h2>

                </div>

                @if (total >= 0)
                {
                    <table class="postLikes">
                        <tr>
                            <td style="text-align:center; color:green; font-style:italic;">@total</td>
                            <td><img src="@Url.Content("~/Content/images/post/like.png")" width="20" height="20" alt="upvote" /></td>
                        </tr>
                    </table>
                }
                else
                {
                    <table class="postDislikes">
                        <tr>
                            <td style="text-align:center; color:#b50000; font-style:oblique;">@total</td>
                            <td><img src="@Url.Content("~/Content/images/post/dislike.png")" width="20" height="20" alt="downvote" /></td>
                        </tr>
                    </table>
                }
            </div>
        </div>
    </div>
}

<div id="spacer"></div>
<div class="paging">
    <div class="pagenum">
        Page @(Model.PagedStoreViewModel.PageCount < Model.PagedStoreViewModel.PageNumber ? 0 : Model.PagedStoreViewModel.PageNumber) of @Model.PagedStoreViewModel.PageCount
    </div>
    @{
        List<string> searchCatList = new List<string>();

        if (ViewBag.CurrentSearchCategory != null)
        {
            foreach (var item in ViewBag.CurrentSearchCategory)
            {
                searchCatList.Add(item);
            }
        }

    }
    @if (ViewBag.CurrentSearchCategory != null || ViewBag.CurrentSearchTag != null)
    {
        @Html.PagedListPager(Model.PagedStoreViewModel, page => Url.Action("Index", "Product", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }) + "?" + string.Join("&", searchCatList.Select(x => "searchCategory=" + x)))
    }
    else
    {
        @Html.PagedListPager(Model.PagedStoreViewModel, page => Url.Action("Index", "Product", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))
    }
</div>


