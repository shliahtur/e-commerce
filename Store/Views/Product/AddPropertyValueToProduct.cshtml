@model Store.Models.ProductViewModel
@using Store.Models

@*<table>
        <tr>
            <td></td>
            <td>
                @for (int i = 0; i < Model.ProductProperties.Count(); i++)
                {
                    EFDbContext db = new EFDbContext();
                    string propId = Model.ProductProperties[i].Id;
                    bool check = db.CategoryProperties.Where(x => x.PropertyId == propId && x.CategoryId == Model.CategoryId).Select(x => x.Checked).FirstOrDefault();
                    if (check)
                    {
                        Model.ProductProperties[i].Checked = true;
                        @Html.CheckBoxFor(m => m.ProductProperties[i].Checked)
                    }
                    else
                    {
                        @Html.CheckBoxFor(m => m.ProductProperties[i].Checked)
                    }

                    @Html.LabelFor(m => m.ProductProperties[i].Checked, Model.ProductProperties[i].PropertyName)
                    @Html.HiddenFor(m => m.ProductProperties[i].Id)<br />
                }
            </td>
        </tr>
    </table>*@


@using (Html.BeginForm("AddPropertyValueToProduct", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    List<string> catsId = new List<string>();
    foreach (var c in Model.ProductCategories)
    {
        catsId.Add(c.Id);
    }
    string catId;
    if (catsId.Count.Equals(0))
    { catId = "1"; }
    else
    { catId = catsId.First(); }


    foreach (var t in Model.ProductProperties)
    {

        <input type="hidden" name="slug" value="@Model.UrlSeo" />
        <input type="hidden" name="propertyid" value="@t.Id" />
        <input type="hidden" name="productid" value="@Model.ID" />
        <input type="hidden" name="categoryid" value="@catId" />
        <label for="valuefield">@t.PropertyName</label>
        <input type="text" id="valuefield" name="value" placeholder="@t. .PropertyValue">
        <input class="addVidBtn" type="submit" value="&#x27a5;" />
        <br />
    }
}

